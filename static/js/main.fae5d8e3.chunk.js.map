{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","style","heigh","width","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","_useState5","_useState6","Yellowmode","setYellowMode","message","setTimeout","document","body","toggleYellow","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fae5d8e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">{props.aboutText} </a>\r\n        </li>\r\n       \r\n      </ul>\r\n      <div className=\"d-flex\">\r\n        <div className=\"bg-primary rounded mx-2\" style={{heigh\r\n        :'30px', width:'30px'}} ></div>\r\n      </div>\r\n\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        \r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.propTypes= {title:PropTypes.string.isRequired,\r\n                  aboutText:PropTypes.string.isRequired\r\n                }\r\n\r\nNavbar.defaultProps={\r\n  title:\"Add Title\",\r\n  aboutText:\"About\"\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upperCase\",'success');\r\n    }\r\n    const handleLowClick=()=>{\r\n      // console.log(\"Uppercase was clicked\");\r\n      let newText=text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to LowerCase\",'success');\r\n  }\r\n  const handleReverseClick=()=>{\r\n    // console.log(\"Uppercase was clicked\");\r\n    let newText = text.split('').reverse().join('');\r\n    setText(newText);\r\n    props.showAlert(\"Words Reversed\",'success');\r\n}\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"text change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'#011932'}}>\r\n   <h1>{props.heading}</h1>     \r\n<div className=\"form-group\">\r\n<textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'#011932'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button type=\"button\" className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n<button type=\"button\" className=\"btn btn-primary my-3 mx-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n<button type=\"button\" className=\"btn btn-primary my-3 mx-2\" onClick={handleReverseClick}>Reverse Text</button>\r\n\r\n    </div>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#011932'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.length<=0?0:text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter the text in TextBox to preview here!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function \r\nAlert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show my-2`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","\nimport React ,{ useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert'\n\n\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const [Yellowmode, setYellowMode] = useState('light');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#011932';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  //Yellow mode \n  const toggleYellow = () => {\n    if (Yellowmode === 'light') {\n      setYellowMode('Yellow');\n      document.body.style.backgroundColor = '#CCC033';\n      showAlert(\"Yellow mode has been enabled\", \"success\");\n    }\n    else {\n      setYellowMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n\n  }\n  return (\n    <>\n      {/* <Router> */}\n      {/* <Navbar  /> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About\" /> */}\n      <Navbar title=\"TextUtils\" mode={mode} Yellowmode={Yellowmode} toggleMode={toggleMode} toggleYellow={toggleYellow} />\n      <Alert alert={alert} />\n      \n      <div className=\"container my-3\">\n    \n        {/* <Routes>   */}\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n        {/* <Route exact path=\"/\" element = {  */}\n        <TextForm showAlert = {showAlert} heading=\"Enter Data for Analyzing\"  mode = {mode}/>\n        {/* } /> */}\n        {/* </Routes> */}\n        </div>\n    {/* </Router> */}\n    \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}